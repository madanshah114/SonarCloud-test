# sample-workflow-ubuntu-latest
# docs are in the repo

name: .NET Code Analysis ubuntu-latest
on:
  push:
    branches:
      - sonarcloud-pr1-test

jobs:
  sample:
    name: .NET Code Analysis runner

    # .NET Code Analysis runs on windows-latest.
    # ubuntu-latest and macos-latest supporting coming soon
    runs-on: ubuntu-latest

    steps:

      # Checkout your code repository to scan
    - uses: actions/checkout@v2

    # Ensure compatible versions of dotnet are installed.
    # The [Microsoft Code Analysis CLI](https://aka.ms/mscadocs) is built with dotnet v3.1.201.
    # A version greater than or equal to v3.1.201 of dotnet must be installed on the agent in order to run this action.
    # Remote agents already have a compatible version of dotnet installed and this step may be skipped.
    # For local agents, ensure dotnet version 3.1.201 or later is installed by including this action:
    # - uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: '3.1.x'
    #   shell: powershell        
    #   run: |
    #   dotnet-install.ps1 -Architecture x64 -InstallDir "/usr/share/dotnet/" -Runtime 'Microsoft.NETCore.App' -Version 3.1.2

    # Download the dotnet-install.ps1 script
    - name: Download dotnet-install.ps1
      run: |
        mkdir dotnet
        curl -o dotnet/dotnet-install.ps1 https://github.com/actions/setup-dotnet/blob/main/externals/install-dotnet.ps1

    # Install or update .NET using PowerShell script
    - name: Install or update .NET
      run: |
        pwsh dotnet/dotnet-install.ps1 -Architecture x64 -InstallDir /usr/share/dotnet/ -Runtime 'Microsoft.NETCore.App' -Version 3.1.2


    # Run NuGet restore for the solution at repo root
    - name: Run NuGet restore
      run: dotnet restore

    # Run code analysis for the solution at repo root
    - name: Run .NET Code Analysis
      uses: dotnet/code-analysis@main
      id: code-analysis
      with:
        build-breaking: false

    # Upload the analysis results file
    - name: Upload analysis results
      uses: actions/upload-artifact@v2
      with:
        name: analysis_results.sarif
        path: ${{ steps.code-analysis.outputs.sarifFile }}